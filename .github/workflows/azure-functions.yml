name: Deploy Azure Functions

on:
  push:
    branches:
      - main
      - cloud-migration
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_FUNCTIONAPP_NAME: 'pokedata-func'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './PokeDataFunc'
  NODE_VERSION: '18.x'

jobs:
  build-and-deploy-staging:
    runs-on: ubuntu-latest
    name: Build and Deploy to Staging
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.9.0

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: './PokeDataFunc/pnpm-lock.yaml'

      - name: 'Install dependencies'
        run: pnpm install --frozen-lockfile
        working-directory: ./PokeDataFunc

      - name: 'Login to Azure'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Deploy to Azure Functions Staging'
        uses: Azure/functions-action@v1
        id: fa-staging
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          slot-name: 'staging'
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          respect-pom-xml: false
          respect-funcignore: false
          scm-do-build-during-deployment: false
          enable-oryx-build: false
          remote-build: false

  deploy-production:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: build-and-deploy-staging
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 'Login to Azure'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Swap Staging to Production'
        run: |
          az functionapp deployment slot swap \
            --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --resource-group pokedata-rg \
            --slot staging \
            --target-slot production
