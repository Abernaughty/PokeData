name: Deploy to Azure Functions Production

on:
  workflow_dispatch:
    inputs:
      deploy_method:
        description: 'Deployment method'
        required: true
        default: 'swap'
        type: choice
        options:
        - swap
        - direct

permissions:
  id-token: write
  contents: read

env:
  AZURE_FUNCTIONAPP_NAME: pokedata-func
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './PokeDataFunc'
  NODE_VERSION: '22.x'

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Login to Azure'
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: 'Swap staging to production'
      if: ${{ github.event.inputs.deploy_method == 'swap' }}
      run: |
        az functionapp deployment slot swap \
          --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
          --resource-group pokedata-rg \
          --slot staging \
          --target-slot production

    - name: 'Direct deploy to production'
      if: ${{ github.event.inputs.deploy_method == 'direct' }}
      run: |
        echo "Direct deployment to production requires building and deploying directly"
        echo "This option is available but not recommended for production use"
        echo "Please use the staging slot and swap method instead"
        exit 1

  build-and-deploy-direct:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.deploy_method == 'direct' }}
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './PokeDataFunc/package-lock.json'

    - name: 'Install dependencies'
      run: npm ci
      working-directory: ./PokeDataFunc

    - name: 'Build TypeScript'
      run: npm run build
      working-directory: ./PokeDataFunc

    - name: 'Login to Azure'
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: 'Deploy to Azure Functions Production'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: './PokeDataFunc'
